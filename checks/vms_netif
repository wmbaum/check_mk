#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<vms_netif>>>
# WE0 661236727 169337595
def inventory_vms_netif(info):
    return [ (line[0], '""', None) for line in info ]

def check_vms_netif(item, params, info):
    for line in info:
        if item == line[0]:
            try:
                global g_counters
                perfdata = []
                rates = []
                this_time = time.time()
                for dir, value in [ ('ipackets', int(line[1])), ('opackets', int(line[2])) ]:
                    countername = "netctr.%s.%s" % (item, dir)
                    timedif, items_per_sec = get_counter(countername, this_time, value)
                    perfdata.append( (dir, "%dc" % value) )
                    rates.append(items_per_sec)
                return (0, "packets/s: %.2f in / %.2f out " % (rates[0], rates[1]), perfdata)
            except:
                return (3, "invalid output from plugin")

    return (3, "network inteface not present")


check_info["vms_netif"] = {
    'check_function':          check_vms_netif,
    'inventory_function':      inventory_vms_netif,
    'service_description':     'NIC %s',
    'has_perfdata':            True,
}
