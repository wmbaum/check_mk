#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


inventory_tsm_stgpool_check_params = 'tsm_stgpool_default_levels'
tsm_stgpool_default_levels         = (90, 95)

def inventory_tsm_stgpool(info):
    return [ (line[0], '%s perc used' % line[1], inventory_tsm_stgpool_check_params ) for line in info ]

def check_tsm_stgpool(item, params, info):
    for line in info:
        if line[0] == item:
            current = float(line[1])
            warn, crit = params
            infotext = "%.1f%% used" % current
            perfdata = [ ("percused", "%.1f%%" % current, warn, crit, 0, 100.0) ]
            if current >= crit:
                return (2, "%s (critical at %.1f%%)" % (infotext, crit), perfdata)
            elif current >= warn:
                return (1, "%s (warning  at %.1f%%)" % (infotext, warn), perfdata)
            else:
                return (0, "%s" % (infotext,), perfdata)
    return (3, "No such storage pool found")



check_info["tsm_stgpool"] = {
    'check_function':          check_tsm_stgpool,
    'inventory_function':      inventory_tsm_stgpool,
    'service_description':     'Storage Pool %s',
    'has_perfdata':            True,
}
