#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_local(info):
    return [ (line[1], '', '""') for line in info ]

def check_local(item, params, info):
    for line in info:
        if line[1] == item:
            state = int(line[0])
            perftxt = line[2]
            output = " ".join(line[3:])
            perfdata = []
            if perftxt != "-":
                # new: allow multiple perfdata by using | as separator
                for entry in perftxt.split('|'):
                    varname, valuetxt = entry.split('=')
                    values = valuetxt.split(';')
                    perfdata.append(tuple( [varname] + values ))
            return (state, output, perfdata)
    return (3, "Check output not found in local checks")



check_info["local"] = {
    'check_function':          check_local,
    'inventory_function':      inventory_local,
    'service_description':     '%s',
    'has_perfdata':            True,
}
