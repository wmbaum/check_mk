#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# Example output
# Name of a Virt. Server:
# 1.3.6.1.4.1.3375.2.2.10.2.3.1.1.ascii_encoded_string.  "VS_XX"
# Textual Status (only supported in F5 OS 9.3+
# 1.3.6.1.4.1.3375.2.2.10.1.2.1.25.5.12.34.56.78.90   "The virtual server is available"
# Table with name and status
# 1.3.6.1.4.1.3375.2.2.10.13.2.1.  1     .5.12.34.56.78.90  "VS_XX"
# 1.3.6.1.4.1.3375.2.2.10.13.2.1.  2     .5.12.34.56.78.90  1


def inventory_f5_bigip_vserver(checkname,info):
    inventory = []
    for line in info:
# snmp info will return some empty lines here, filter them and
# only inventorize OK status.
        if line[0] != "":
            if int(line[1]) == 1:
                inventory.append((line[0], None))
    return inventory


def check_f5_bigip_vserver(item, _no_params, info):
    for line in info:
        if line[0] != "":
            if line[0] == item:
                status = int(line[1])
                if status == 0:
                    return (1, "WARN - Virtual Server is disabled")
                elif status == 1:
                    return (0, "OK - Virtual Server is up and available")
                elif status == 2:
                    return (2, "CRIT - Virtual Server is currently not available")
                elif status == 3:
                    return (2, "CRIT - Virtual Server is not available")
                elif status == 4:
                    return (1, "WARN - Virtual Server status is unknown")
                else:
                    return (3, "UNKNOWN")
    return (3, "UNKNOWN - Virtual Server %s not found in SNMP output" % item)



snmp_info["f5_bigip_vserver"] = \
    ( ".1.3.6.1.4.1.3375.2.2.10.1.2.1", [
        1, # Name
        2, # Status
      ])



check_info["f5_bigip_vserver"] = (check_f5_bigip_vserver, "Virtual Server %s", 0, inventory_f5_bigip_vserver )


snmp_scan_functions["f5_bigip_vserver"] = \
    lambda oid: '.1.3.6.1.4.1.3375.2' in oid(".1.3.6.1.2.1.1.2.0") and "big-ip" in oid(".1.3.6.1.4.1.3375.2.1.4.1.0").lower()
