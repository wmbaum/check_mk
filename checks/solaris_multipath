#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<solaris_multipath>>>
#/dev/rdsk/c4t600601608CB02A00DCFD2EEB19A0E111d0s2 4 4

def check_solaris_multipath(item, params, info):
    for line in info:
        if line[0].split('/')[-1] == item:
            total, ok = map(int, line[1:3])
            if total == ok:
                return(0, "%d paths up" % total)
            elif total > ok  and (100 / total) * ok <= 50:
                return(2, "only %d/%d paths up" % (ok, total))
            else:
                return(1, "only %d/%d paths up" % (ok, total))

    return(2, "Path not found")

check_info["solaris_multipath"] =  {
    "check_function" :  check_solaris_multipath,
    "inventory_function" : lambda info: [ (item[0].split('/')[-1], None ) for item in info],
    "service_description" : "Multipath %s",
    "has_perfdata" : False
}
